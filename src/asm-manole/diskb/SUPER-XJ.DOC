
　　　　　ＳＵＰＥＲ−Ｘ　ｖｅｒｓｉｏｎ　１．２
　　　　Ｃｏｐｙｒｉｇｈｔ　　１９９４　　Ｒｏｍｉ


【　はじめに　】
　ＳＵＰＥＲ−Ｘは、ＭＳＸ史上最高の機能を誇るモニタ・デバッガです。マシン語プログラムの開発、解析、デバッグ等に絶大な威力を発揮します。


【  ファイルの説明  】
　このディスクには、以下の６つのファイルが入っています。
″ＳＵＰＥＲ−Ｘ．ＢＡＴ″……ＤＯＳ用バッチファイル。″ＳＵＰＥＲ−Ｘ．ＢＡＳ″を実行する
″ＳＵＰＥＲ−Ｘ．ＢＡＳ″……″ＳＵＰＥＲ−Ｘ．ＬＤＲ″を実行するＢＡＳＩＣファイル
″ＳＵＰＥＲ−Ｘ．ＬＤＲ″……ＳＵＰＥＲ−Ｘセッティング用マシン語ファイル
″ＳＵＰＥＲ−Ｘ．ＢＤＹ″……ＳＵＰＥＲ−Ｘ本体。″ＳＵＰＥＲ−Ｘ．ＬＤＲ″により読み込まれ、裏ＲＡＭに転送される。
″ＳＵＰＥＲ−Ｘ．ＴＮＫ″……インデックスタンク（後述）ファイル。ディスクに存在すれば、″ＳＵＰＥＲ−Ｘ．ＬＤＲ″によって読み込まれて、ＶＲＡＭに転送される
″ＳＵＰＥＲ−Ｘ．ＦＮＴ″……漢字フォントファイル。ディスクに存在すれば、″ＳＵＰＥＲ−Ｘ．ＬＤＲ″によって読み込まれて、ＶＲＡＭスロット（後述）に転送される。

【　セッティングと起動　】
　ＳＵＰＥＲ−Ｘは、ＢＡＳＩＣのＣＡＬＬ命令で呼び出されますが、その前にセッティングを行わなくてはいけません。
　ＢＡＳＩＣ起動直後、
ＢＬＯＡＤ″ＳＵＰＥＲ−Ｘ．ＬＤＲ″，Ｒ
　と入力すると、″ＳＵＰＥＲ−Ｘ．ＬＤＲ″が実行され、″ＳＵＰＥＲ−Ｘ．ＢＤＹ″は裏ＲＡＭに、″ＳＵＰＥＲ−Ｘ．ＴＮＫ″と″ＳＵＰＥＲ−Ｘ．ＦＮＴ″はＶＲＡＭに転送されて、セッティングは完了です。ＤＯＳから″ＳＵＰＥＲ−Ｘ．ＢＡＴ″を実行しても、同じ事です。後は、裏ＲＡＭが破壊されたり、ＤＯＳに行かない限り、
ＣＡＬＬ ＠
　と入力すれば、ＳＵＰＥＲ−Ｘは起動します。″ＳＵＰＥＲ−Ｘ．ＴＮＫ″と″ＳＵＰＥＲ−Ｘ．ＦＮＴ″はなくてもセッティング自体は可能ですが、″ＳＵＰＥＲ−Ｘ．ＴＮＫ″がない時はインデックスタンクは空の状態、″ＳＵＰＥＲ−Ｘ．ＦＮＴ″がない時は漢字フォントのない状態で始まります。
　また、通常、ＤＯＳに入る場合、
ＣＡＬＬ　ＳＹＳＴＥＭ
　としますが、ＳＵＰＥＲ−Ｘが組み込まれている時は、
ＣＡＬＬ　Ｓ
　でも、ＤＯＳに行くことができます。単に５文字分横着なだけですが、ほんの少しだけ楽です。


【　ＣＰＵチェンジコマンドの拡張　】
　ｔｕｒｂｏＲの場合は、セッティングと同時にＣＰＵチェンジコマンドも拡張されます。書式は、
ＣＡＬＬ ＣＨＣＰＵ（ｎ）
　で、ｎの値により、次のように設定します。
ｎ＝０……Ｚ８０
ｎ＝１……Ｒ８００（ＲＯＭ）
ｎ＝２……Ｒ８００（ＤＲＡＭ）
　ただし、ＲＯＭの内容をコピーしているＲＡＭセグメントを開放した場合、ＣＰＵをＲ８００（ＤＲＡＭ）にすると暴走します。またＤＯＳ１モードでＣＰＵをＲ８００にしてディスクアクセスすると、ディスクのデータが破壊される場合があります。


【　基礎知識　】
　起動後は、タイトル、マシン情報表示後、プロンプトが表示されコマンド待ちになります。プロンプトは、ＤＯＳと同じように、
［カレントドライブ名］＞
　という形で、基本的に、このプロンプトの後にコマンドを入力して実行します。
　また、この時、［ＧＲＡＰＨ］＋［ＳＰＡＣＥ］を押すとヘルプウィンドーが表示されます。
　コマンド実行中は、一部のコマンド以外、スペースキーまたはリターンキーで一時停止、再度押すとコマンド再開、［ＥＳＣ］または［ＢＳ］（文字を入力する状態の時は［ＣＴＲＬ］＋［ＳＴＯＰ］）で中断です。
　コマンド名は大文字と小文字の区別をします。


【　システムの説明　】

  −  アドレス・スロット指定の方法  −
　ＳＵＰＥＲ−Ｘは過去のＲｏｍｉ製モニタの伝統を引き継ぎ、アドレスにスロット指定が可能です。
　書式は、以下の通りです。
［アドレス］＃［基本スロット番号］−［拡張スロット番号］
　例えば、「基本スロット３、拡張スロット１のアドレス１２３４Ｈ」は、「１２３４＃３−１」というふうに表記します。
　また、特殊なスロット指定として、現在マシンレベルで選択されている（オモテに出ている、つまり普通の状態の）スロットを指定する場合は、「＃Ｓ」または「＃５」で、ＶＲＡＭスロット（後述）を指定する場合は「＃Ｖ」または「＃４」で指定します。
　また、スロット指定を省略した場合は、その時のカレントスロット（後述）を指定したことになります。

  −  カレントスロット  −
　カレントスロットとは、スロット指定を省略した場合のデフォルトのスロット指定のことで、基本コマンド（ダンプ、アスキー、ディスアセンブラ、マルチライティング、キャラクタの各コマンド）で最後に指定したスロット指定がそれになります。
　例えば、カレントスロットが「＃２−３」の時に、
Ａ＞Ｄ０
　と入力すると、「スロット＃２−３の０番地から、ダンプエディットを開始せよ」という意味になります。また、コマンドラインから
Ａ＞＃０−０
　とスロット指定だけを入力することによっても、カレントスロットを変えることができます。
　その時々のカレントスロットは、画面下部のインフォメーションエリア（後述）に表示されます。
　ＳＵＰＥＲ−Ｘ起動時のカレントスロットは、「＃ＳＥＬＥＣＴ」、つまりマシンレベルで選択されているスロットですから、「スロット」についてまだよく分からないユーザーは、一度もスロット指定をしなければいいわけです。

  −  ＶＲＡＭスロット  −
　ＳＵＰＥＲ−Ｘは、ＶＲＡＭの後方６４Ｋバイト（１００００Ｈ〜１ＦＦＦＦＨ）を「ＶＲＡＭスロット（＃Ｖまたは＃４）」として、ＳＵＰＥＲ−Ｘのシステム上でＲＡＭスロット同様に扱えます。ただし、″ＳＵＰＥＲ−Ｘ．ＦＮＴ″の漢字フォント常駐位置と兼用の為、漢字を使用するコマンドを実行する時は、データを不用意に変えると漢字が正常に表示されません。必要に応じて使い分けて下さい。
　当然ですが、プログラムを実行することはできません。

  −  数値  −
　ＳＵＰＥＲ−Ｘは、アドレスなどは一般的な１６進数で入力しますが、その他は「数値」で入力します。
　「数値」とは、ＳＵＰＥＲ−Ｘが受け入れることのできる形式で書かれた数字で、２進数、１０進数、１６進数（一般的アセンブラと同じ書式）の他、負の数、式（計算範囲は２バイト。オーバーフローは無視）も扱えます。「’」で２文字以内の文字を囲んで、アスキーコードを表す事も可能です。
　式の演算子には、優先順位はなく、「＋」、「−」、「＊」、「／」（ＢＡＳＩＣと同じ意味）、 「￥」（余剰）、論理演算の「＆」（ＡＮＤ）、「〈」（ＯＲ）、「〉」（ＸＯＲ）が使えます。
　後の説明の「数値」は、全てこの形式で入力します。

  −  インフォメーションエリア　−
　起動中は、画面下部に、システムの各情報を表示する「インフォメーションエリア」があります。
［  ］……実行中の基本コマンド名、カーソルのあるアドレス（サーチ時はサーチ中のアドレス）、スーパーぺージング（後述）のページ、を順に表示
ＳＬＯＴ……現在のカレントスロット。「＃ＳＥＬＥＣＴ」は、マシンレベルで選択されているスロットのことを指す
ＳＵＭ……ダンプ実行時のチェックサムのタイプ（ＮＯＲＭＡＬ＝普通の８バイトサム／＋ＡＤＲ＝アドレス加算型サム）。ＣＳコマンドで切り替えられる

  −  特殊コントロールキー  −
　入力待ちの時に、［ＣＴＲＬ］＋［Ｐ］を押すと、画面の内容をまるごとプリンタにテキストコピーします。また［ＣＴＲＬ］＋［Ｖ］で、その時の画面の内容を「ＶＲＡＭノート」に写します（内部的には、使用していないＶＲＡＭに画面を保存します）。「ＶＲＡＭノート」に書かれた内容は、ＳＵＰＥＲ−Ｘシステム上キー入力を受け付けている時に［ＳＥＬＥＣＴ］を押すことで参照できます。

  −  １６進テンキーフル対応  −
　基本的に、ＳＵＰＥＲ−Ｘ内ではいつでも、テンキーは１６進テンキーとして使用できます。初期設定はタイプ１／配列１です。
　ところで、ｖｅｒ１．１のユーザーの感想で、「テンキーの「，」が使えないのはイヤ」というものがあったため、データやコマンドの区切りは、スペースも受け付けるようにしています。
例）以下の二通りが可能
Ａ＞ＳＤ０，１０００，ＦＩＬＥＮＡＭＥ
Ａ＞ＳＤ０　１０００　ＦＩＬＥＮＡＭＥ

  −  コマンド実行時のプリンタ出力  −
　一部のコマンド以外、コマンドの頭に「？」を置いて入力すると、実行時に画面に表示される内容をプリンタにも出力することができます。

  −  アドレス変数  −
　通常のアドレス・スロット指定同様に使える「アドレス変数」が、「＠０」〜「＠３」の４つあり、各アドレス変数の値は、ＶＲコマンドで設定できます。
　「＠０」は、基本コマンドで最後にベースアドレスとして使用したアドレスとスロットの値を持ち、「＠」に省略できます。

  −  ファンクションキー１について  −
　ファイルをロードして、何等かの処理を施した後、セーブしようと思ったら、ファイル名を忘れてしまった、なんて事が時々あります。そういう時の為にＳＵＰＥＲ−Ｘは、ファンクションキー１に、一番最後に処理したファイル名を入れておきます。

  −  アゲイン機能  −
　コマンドラインから、［ＲＥＴＵＲＮ］だけを入力すると、コマンドラインに、直前に入力した文字列が表示されます。これがアゲイン機能です。

  −  カレントドライブの変更  −
　ＤＯＳ同様、コマンドラインから
Ａ〉［ドライブ名］：
　と入力すると、カレントドライブを、指定したドライブに変更できます。

  −  イージーインプット  −
　マルチライティングを除く基本コマンド実行中、「￥」か「ＴＡＢ」を押す（ベースアドレスの変更）と、画面の一番下に、
ＡＤＲ％〉［＿＿＿＿＃＿−＿］
　と表示され、アドレス入力待ちになります。この時の入力方式をイージーインプットといい、アドレス入力を少しでもラクにしようと考案されたものです。通常は普通の入力方式と大差はありませんが、スーパーページング（後述）と組み合わさった時、意義あるものとなります。
　操作方法は、アドレス、スロットなどは普通に数字で入力（１６進テンキー対応）、［ＤＥＬ］か［ＢＳ］で一文字削除、［ＥＳＣ］か［カーソルの左］で中断、［ＳＰＡＣＥ］か［カーソルの上］で、次のステップへ（アドレス入力中ならスロット入力へ、スロット入力中なら入力終了）、［ＲＥＴＵＲＮ］で入力終了です。

  −  インデックス機能  −
　任意のアドレス（データ）に説明をつけることのできる機能が、インデックス機能です。
　登録されたアドレスやデータの事を「インデックス」といい、それらインデックスの情報が集まった辞書のようなものを、「インデックスタンク」といいます。
　インデックスタンクは、ファイル（″ＳＵＰＥＲ−Ｘ．ＴＮＫ″）の形でシステムと分離しているため、ユーザーが好みに合わせて作成することができます。インデックスタンク内のインデックスは、いくつかのコマンド中でワンキーで参照可能です。
　インデックスタンクのデータエリアとして、ＶＲＡＭの８０００Ｈ〜ＦＦＦＦＨを使用し、作成可能インデックス数は５１２です。付属のファイルには４７０個ほどのインデックスが登録済みです（主なＢＩＯＳ、主なワークエリア、主なフック、主なＩ／Ｏポートなど）。
　ＶＲＡＭの内容を変えると、当然インデックスタンクは破壊されますが、破壊された状態で参照しても暴走することはありません。ただ、何枚もでたらめなインデックスが出てくる場合がありますので、そんなときは［ＥＳＣ］で参照状態から抜けてください。一番いいのは、ＶＲＡＭが破壊されたと思ったら、ｉＬコマンドで再ロードしておくことです。
　知らなくても困りませんが、技術資料としてインデックスタンクファイルのフォーマットを以下に記します。
ファイル先頭２バイド……インデックスの総数
残り……（アドレス２バイト＋スロットデータ１バイト＋種類データ１バイト＋説明データ６０バイト）＊５１２

  −  スーパーページング機能  −
　ディスアセンブラでプログラムの解析をした事がある人なら、ＣＡＬＬやらＪＰでプログラムがやたら飛びまくっていて、嫌になったことがあるはず。そんな面倒を、うそのように解決してくれるのが、この「スーパーページング機能」です。
　具体的にいうと、ディスアセンブルエディット用画面を最大１６枚まで階層的に持て（実際にはスロット／アドレスとカーソル位置を保存している）、そのページは［カーソルキーの右］で簡単に１枚更新、［カーソルキーの左］で戻すことができる、という機能です。
　少し説明します。例えば、ディスアセンブルエディット中に、「ＣＡＬＬ  ０１３４Ｈ」という行があったとします。その時カーソルをその行に合わせて、［カーソルの右］を押すと、
Ｐ〉〉［０１３４＃＿−＿］
　と、ＣＡＬＬ先アドレスをイージーインプット中に引き込んで（ＳＵＰＥＲ−Ｘは、ディスアセンブル文字列中から数値を読み取る事ができる）イージーインプット状態になります。そのまま［ＲＥＴＵＲＮ］か［カーソルの上］を押すと、そのアドレスを入力したことになりますから、ページは一枚更新され（インフォメーションエリアに注目）、ディスアセンブルエディットのベースアドレスは１３４Ｈに移ります。
　次に、そこから順次解析していって、ＲＥＴに当たったとします。そしたら、［カーソルの左］を押します。するとあっというまに、元の「ＣＡＬＬ  ０１３４Ｈ」という行に戻ります。
　つまり、実際にＣＡＬＬ命令を実行するＣＰＵがするような事を（ＣＡＬＬでスタックを積む／ＲＥＴでスタックを戻す）、システムがしているわけです。ＣＡＬＬ命令が続いていても、ページは１６枚まで更新可能なので困ることはないでしょう。
　ページを更新または戻すことができるのはディスアセンブラの中だけで、ディスアセンブラを抜けてもページはそのままです。実際に使ってみないとこの便利さは分からないかもしれません。とにかく使って、「イカす！」と呟いてほしいです。


【　コマンドの説明　】

　以下にコマンドの説明をします。〈〉内は省略可能です。
　各基本コマンドは、入力するパラメータの数により機能が違います。
・アドレスが１つ＝エディット画面
・アドレスが２つ＝ノンストップでリスト表示（主にプリンタ出力用）
・更にファイル名を続ける＝リストをそのファイルに出力
　エディット時、画面右下に、カーソル以降２バイトが漢字コードの時に働く一文字漢字ウィンドーと（要漢字ＲＯＭ）、カーソル以降３２バイトを１６＊１６のフォントとするグラフィックウィンドーを表示します。
　また、基本コマンドのエディット形式間は、［ＲＥＴＵＲＮ］で基本コマンド選択ウィンドーを開いてカーソルキーで選び、移行することができます。


  −  基本コマンド１・ダンプエディット／リスト  −
＞Ｄ［開始アドレス］〈＃スロット指定〉〈，終了アドレス〉〈，ファイル名〉 ［ＲＥＴＵＲＮ］
　入力したアドレスが一つだった場合は、ダンプ形式でメモリをエディットするダンプエディットに入ります。
　ダンプエディット時のキー操作は、以下の通り。
　
［０］〜［Ｆ］……１６進データ入力
［カーソルキー］……カーソル移動
［ＢＳ］……カーソル一つ戻る
［″］……続く一文字をアスキーコードで書き込み
［ＳＨＩＦＴ］＋［カーソルキー上下］……カーソル位置はそのままで画面をスクロール
［ＨＯＭＥ］……カーソルをホームポジションに移動
［ＳＨＩＦＴ］＋［ＨＯＭＥ］……カーソルキーのあるアドレスをベースアドレスにする
［ＩＮＳ］……一画面スクロール
［ＤＥＬ］……一画面バックスクロール
［￥］または［ＴＡＢ］……ベースアドレスを変える。イージーインプットに依る。何も入力せず［ＲＥＴＵＲＮ］でコマンドモードへ移行
［ＳＰＡＣＥ］……カーソルのあるアドレスの各情報（アドレス＋０にあるデータ／アドレス＋０＋１にあるデータ／一行ディスアセンブル／インデックスタンクに合致するインデックスはないか）表示
［ＲＥＴＵＲＮ］……基本コマンド選択ウィンドーを開く。行きたいコマンドの方向の［カーソルキー］で、カーソルのあるアドレスを引き継いで選んだコマンドへ移行
［ＣＴＲＬ］＋［Ｓ］……サーチデータを設定後、サーチ。見つかったらそのアドレスへ移動。データの入力形式はＦＤコマンド（後述）と同様。サーチ時はフォーメーションエリアにサーチ中のアドレスを表示
［ＣＴＲＬ］＋［Ｆ］……サーチデータが設定してあればサーチ
［ＣＴＲＬ］＋［Ｄ］……サーチデータが設定してあればバックサーチ
［ＥＳＣ］……エディットを抜けてコマンドモードへ移行
入力したアドレスが２つだったらノンストップダンプリスト表示、更にファイル名を続けていたらファイルにも出力します。
例）スロット＃０−０の０〜１０００Ｈのダンプリストを、プリントアウトしつつもＢドライブのファイル″ＴＥＳＴ．ＤＭＰ″に出力
Ａ〉？Ｄ０，１０００＃０−０，Ｂ：ＴＥＳＴ．ＤＭＰ ［ＲＥＴＵＲＮ］


  −  基本コマンド２・アスキーエディット／リスト  −
＞Ａ［開始アドレス］〈＃スロット指定〉〈，終了アドレス〉〈，ファイル名〉 ［ＲＥＴＵＲＮ］
　アスキーエディット時のキー操作は、ほぼＤコマンドと同様ですが、以下の点で異なります。
［ＳＨＩＦＴ］＋［ＳＰＡＣＥ］……カーソルのあるアドレスの各情報表示
［その他のほとんどのキー］……文字データ入力


  −  基本コマンド３・ディスアセンブルエディット／リスト  −
＞Ｉ［開始アドレス］〈＃スロット指定〉〈，終了アドレス〉〈，ファイル名〉 ［ＲＥＴＵＲＮ］
　ディスアセンブルエディット時のキー操作は、大体Ｄコマンドと同じですが、以下の点で異なります。
［カーソルキーの上下］……カーソルを移動。その際、上へスクロールする場合は、１バイトづつベースアドレスを若くしていく
［ＤＥＬ］……３２バイト分バックスクロール
［ＳＨＩＦＴ］＋［ＳＰＡＣＥ］……カーソルのあるアドレスの各情報表示
［￥］または［ＴＡＢ］……ベースアドレスの変更。この際、カーソルのある行の文字列中に数値があれば、その数値をアドレスとしてイージーインプットに引き継ぐ。イージーインプットで、何も入力しない状態で［ＲＥＴＵＲＮ］するとコマンドモードへ移行
［カーソルの右］……スーパーページングのページを更新
［カーソルの左］……スーパーページングのページを戻す
　なお、ディスアセンブルはＲ８００の命令に対応しています。


　−　基本コマンド４・キャラクタエディット／リスト　−
＞Ｈ［開始アドレス］〈＃スロット指定〉〈，終了アドレス〉〈，ファイル名〉 ［ＲＥＴＵＲＮ］
　メモリの内容をフォントとして扱います。スプライトや文字フォントの作成に力を発揮します。作成したデータはＳＤコマンドでＢＡＳＩＣのデータにしたり、ＤＥＦＢ形式のデータにしてアセンブラのソースに取り込んだりできます。
　キー操作はほぼＤコマンドと同様ですが、以下の点が異なります。
［ＳＰＡＣＥ］……点を打つ／消す
［ＳＨＩＦＴ］＋［ＳＰＡＣＥ］……カーソルのあるアドレスの各情報表示
［Ｕ］……カーソルのあるアドレスのデータと、その上のアドレスのデータを交換する。キャラクタをずらす時に有用
［Ｄ］……カーソルのあるアドレスのデータと、その下のアドレスのデータを交換する
［Ｒ］……カーソルのあるアドレスのデータを右に回す。カーソルのＸ位置が７か８の時は、横一線を回す
［Ｌ］……カーソルのあるアドレスのデータを左に回す。カーソルのＸ位置が７か８の時は、横一線を回す
［Ｖ］……カーソルのあるアドレスのデータを反転する
［Ｏ］……カーソルのあるアドレスのデータの、すべてのドットをオンにする
［Ｆ］……カーソルのあるアドレスのデータの、すべてのドットをオフにする
［Ｃ］……画面に表示されている範囲のデータをすべてクリア


  −  基本コマンド５・マルチライティング  −
＞Ｍ［開始アドレス］〈＃スロット指定〉 ［ＲＥＴＵＲＮ］
　アドレスを表示して入力待ちになるので、好きな形式で入力して、メモリに書き込んでいくコマンドです。主にワンラインアセンブラとして使用することになるでしょう。
　ニーモニックで入力する際の書式は、
［アドレス］〈＃スロット指定〉 ［ニーモニック］ ［ＲＥＴＵＲＮ］
　で、その際ニーモニック中のアドレス等は、全て数値で入力します。一行入力すると次のアドレスが表示されるので、どんどんプログラムを書いていくことができます。Ｒ８００の命令にも対応しています。
　ニーモニック以外で書き込む場合は、入力待ちの時に、
［アドレス］〈＃スロット指定〉 ［判定記号］［データ，データ……］ ［ＲＥＴＵＲＮ］
　とします。判別記号の種類は、以下の通りです。
［．］＝１６進数の１バイトデータ （例：００００ ．ＣＤ，４Ｄ，００）
［：］＝１６進数の２バイトデータ （例：００００ ：１２３４，ＡＢＣＤ）
［；］＝数値のデータ（範囲２バイト） （例：００００ ；’Ａ’＊１００，１８２００〈１１Ｂ）
［［］＝数値のデータ（範囲１バイト） （例：００００ ［１００，’＃’）
［″］＝文字列データ （例：００００ ″ＬＡＵＧＨＴＥＲ　ＭＥＤＩＴＡＴＩＯＮ）
　これらの場合も、入力後は次のアドレスを自動的に表示します。何も書かずに、またはアドレスだけで［ＲＥＴＵＲＮ］すると、基本コマンド選択ウィンドーになります。また、［ＣＴＲＬ］＋［ＳＴＯＰ］でコマンドモードに移行します。


　−　ＢＡＳＩＣリスト表示　−
＞ＢＬ〈行番号〉　［ＲＥＴＵＲＮ］
　指定した行番号から、リストを表示します。ＢＡＳＩＣリスト格納領域が破壊されている場合は、ＢＡＳＩＣのＬＩＳＴ命令でもそうですが、暴走します。


  −  １６進テンキー設定  −
＞ＴＫ［番号］ ［ＲＥＴＵＲＮ］
　番号は以下の意味があります。起動時はタイプ１／配列１です。
１……タイプ１（Ａ１・Ｆ１シリーズ）／配列１（右上からＦＥＤＣＢＡ）
２……タイプ１／配列２（右上からＡＢＣＤＥＦ）
３……タイプ２（ＷＡＶＹシリーズ）／配列１
４……タイプ２／配列２


  −  ブロック転送  −
＞ＢＴ［転送元開始アドレス］〈＃スロット指定〉，［転送元終了アドレス］，［転送先開始アドレス］〈＃スロット指定〉 ［ＲＥＴＵＲＮ］
　ある範囲のデータを別のアドレスにブロック転送します。転送元と転送先で領域が重なっていてもＯＫです。


  −  リロケート  −
＞ＲＴ［転送元開始アドレス］〈＃スロット指定〉，［転送元終了アドレス］，［転送先開始アドレス］〈＃スロット指定〉 ［ＲＥＴＵＲＮ］ 
　ある領域のマシン語プログラムを、他のアドレスに動くようにして転送（リロケート）し、書き換えたところを画面に表示します。転送元と転送先で領域が重なっていてもＯＫ。ただし当然１００％完璧にリロケートするというのは不可能で、過信するのも危険です。


  −  フィルメモリ  −
＞ＦＬ［開始アドレス］〈＃スロット指定〉，［終了アドレス］，［数値］ ［ＲＥＴＵＲＮ］
　指定された領域をすべて［数値］で埋め尽くします。


  −  メモリコンペア  −
＞ＣＭ［比較元開始アドレス］〈＃スロット指定〉，［比較元終了アドレス］，［比較先開始アドレス］〈＃スロット指定〉〈，Ｓ〉 ［ＲＥＴＵＲＮ］
　指定された領域を比較、違うところを表示します。Ｓスイッチを付加すると、違うところではなく同じ所を表示します。一画面分表示すると一旦停止して入力待ちになりますが、プリンタ出力時はノンストップ表示です。


  −  データ検索  −
＞ＦＤ［開始アドレス］〈＃スロット指定〉，［終了アドレス］ ［ＲＥＴＵＲＮ］
　「Ｓｅａｒｃｈ  ｄａｔａ：」表示の後、探しだしたいデータを入力します。入力形式は主にＭコマンドと同じですが、ニーモニックでは、相対ジャンプ命令（ＪＲやＤＪＮＺ）は入力できません。
＊文字列 ［ＲＥＴＵＲＮ］
　の書式で、「アドレスをディスアセンブルして、そのディスアセンブル文字列の中から文字列をサーチ」という芸当もできます。これは、例えば「ＯＵＴ命令を捜し出したい」といった、コードでのサーチのできない時に有用です。［ＥＳＣ］か［ＢＳ］でサーチを中断します。該当アドレスが多い時は一画面分表示毎にキー入力待ちになります。


  −  チェックサムタイプ変更  −
＞ＣＳ ［ＲＥＴＵＲＮ］
　実行毎に、普通の８バイトサムと、アドレス加算型サムを切り変えます。雑誌のリストを打ち込むことのほとんどない今となっては、あまり意味のないコマンドとなってしまいました。


  −  総合計の算出  −
＞ＴＳ［開始アドレス］〈＃スロット指定〉，［終了アドレス］　［ＲＥＴＵＲＮ］
　指定された領域のデータの総合計を算出します。


  −  プログラムの実行  −
＞ＧＯ［開始アドレス］〈＃スロット指定〉　［ＲＥＴＵＲＮ］
　レジスタセーブエリアの値を各レジスタに代入後、指定アドレスのマシン語プログラムを実行します。ＣＡＬＬ命令を実行する為、ＲＥＴで（スロットが＃ＳＥＬＥＣＴの時はブレークポインタ（後述）にぶつかっても）戻ってきます。その後、各レジスタの値は再びレジスタセーブエリアに保存、表示されます。


  −  レジスタの操作  −
＞ＲＳ〈レジスタ名，数値〉 ［ＲＥＴＵＲＮ］
　レジスタセーブエリアの操作をします。
　コマンド名だけを入力すると、レジスタセーブエリアの全内容を表示します。レジスタ名の代わりに「＊」を入力すると、スタック以外の全てのエリアを０クリアし、「＋」を入力すると、スタックを起動時のアドレスに戻します。レジスタ名を指定した時は、そのレジスタのセーブエリアに指定した数値を書きます。
　レジスタ名は、Ａ，Ｂ，Ｃ，Ｄ，Ｅ，Ｆ，Ｈ，Ｌ，Ａ’，Ｂ’，Ｃ’，Ｄ’，Ｅ’，Ｆ’，Ｈ’，Ｌ’，ＡＦ，ＢＣ，ＤＥ，ＨＬ，ＡＦ’，ＢＣ’，ＤＥ’，ＨＬ’，ＩＸ，ＩＹ，ＩＸＨ，ＩＸＬ，ＩＹＨ，ＩＹＬ，ＳＰ，ＢＰ，ＰＣが指定可能です。
　このうちＳＰ（スタックポインタ）を指定すると、実際にシステム中のスタックも変わるので注意して下さい（８０ＦＦＨ以下には設定不可）。
　ＢＰはブレークポインタの事で、レジスタではありません。スロットが＃ＳＥＬＥＣＴの時にＧＯコマンドでプログラムを実行すると、ＣＰＵがブレークポインタの示すアドレスの命令を実行しようとした時には、プログラムが中断されてシステムに戻ってくるのです。
　その時のレジスタはそのままレジスタセーブエリアにセーブされ、ＰＣ（プログラムカウンタ）には中断したアドレスが入り、スタックは中断した時の状態のままになります。ただし、ブレークポインタが設定できるのはＲＡＭのアドレスだけです。ですから、使用しない時は、０〜３ＦＦＦＨ（ＭＡＩＮ−ＲＯＭのアドレス）に設定すればいいわけです。
　また、ブレークポインタは、ちゃんと「命令として実行されるアドレス」に置かないと意味がありません。


  −  トレース  −
＞ＴＲ〈アドレス〉 ［ＲＥＴＵＲＮ］
　マシン語プログラムを、１命令づつ実行してレジスタなどの状態を見る事を、トレースといいます。トレースできるのはブレークポインタ同様、＃ＳＥＬＥＣＴ上のプログラムのみですが、ＲＯＭ上のプログラムもトレースできます。アドレス省略時は、レジスタセーブエリアのＰＣからトレースします。
　命令を実行する度に、レジスタと次の命令を表示して入力待ちになりますが、その時［？］を押すと、「次の命令」の中の数値の各情報を表示します（プリンタ出力時無効）。
　ＣＡＬＬ命令は、入力待ちの時［ＲＥＴＵＲＮ］を押すことによって、トレースなしで実行することもできます（ただしＣＡＬＬ先から戻ってこないと後は知らない）。また、ＲＳＴ命令は普通の命令と同列に扱います（飛び先まで追いかけない。ＲＯＭ内ルーチンなので特に必要はないでしょう）。
　入力待ちの時、［ＥＳＣ］か［ＢＳ］でトレース中止、それ以外のキーなら次の命令を実行します。トレース中変化したスタックは、トレースを抜けてもそのままなので注意して下さい（デバッグ上その方がいい）。
　プリンタ出力指定をすると、画面には何も表示せず（画面には一切無関知）に、プリンタのみにトレース結果を出力します。これで画面を使うプログラムのトレースができるのです。なお、ＳＵＰＥＲ−ＸはワークエリアＦ３Ｂ１Ｈ（現在の画面の行数）を変えているので、画面を使う場合、プログラム内で設定が必要です（本来は２４）。
　実行する命令のタイミングや順番が狂うと正常に動作しないプログラムや、インラインパラメータ方式のプログラムは正常にトレースできません。


  −  マシンチェック  −
＞ＣＫ ［ＲＥＴＵＲＮ］
　マシンの情報を表示します。意味は以下のとおりです。
ＳＬＯＴ……現在マシンレベルで選択されているスロット（ページ別）
ＲＡＭ……システムＲＡＭスロット（ページ別）
ＥＸＰ……各基本スロットの拡張の有無（マル＝拡張されている／＊＝されていない）
ＤＲＩＶＥ……現在接続されているドライブ
ＳＴＡＣＫ……スタックポインタ。スタックがページ２にあると、色々な弊害が生じるので、ＢＡＳＩＣのＣＬＥＡＲ文などでページ３に位置するのが望ましい
Ｘ……ＳＵＰＥＲ−Ｘがどこにあるか。ページ別
ＭＡＩＮ／ＳＵＢ／ＦＤＣ−ＲＯＭ……それぞれが、どのスロットの、どのページにあるか
ＭＡＰＰＥＲ ＳＵＰＰＯＲＴ……マッパーサポートルーチン（ＤＯＳ２などに内蔵されている）の有無
　次の二つは、マッパーサポートルーチンがないと表示されません。
ＭＡＰＰＥＲ ＲＡＭ……マッパーＲＡＭが接続されているスロットと、そのセグメント数
ＭＡＰＰＥＲ……現在のマッパーの値（ページ別）


  −  ファンクションキーの設定  −
＞ＳＦ〈キー番号（数値），文字列〉 ［ＲＥＴＵＲＮ］
　指定した番号のファンクションキーに、文字列を設定します。数値を［ ］で囲むとキャラクタコードでも指定できます。コマンド名のみの入力は、ファンクションキーの初期化です。


  −  計算  −
＞ＣＬ［数値］ ［ＲＥＴＵＲＮ］
　指定された数値を２バイトの範囲で計算します。計算結果は、２進、１６進、１０進（範囲を正のみと考えた場合と、２の補数表現で負も考えに入れた場合の二種類）で表示。

  −  ＢＡＳＩＣリスト中からの検索  −
＞ＢＦ ［ＲＥＴＵＲＮ］
　「Ｓｅａｒｃｈ ｄａｔａ：」の後に、探しだしたい文字列を入力します。この時「？」は任意の一文字になります（ＤＯＳのワイルドカードのようなもの）。ＢＡＳＩＣのリストが格納されているメモリ領域が破壊されている場合にこのコマンドを実行すると、暴走する場合があります。


  −  マッパーの操作  −
＞ＰＰ〈ページ番号，セグメント番号（数値）〉 ［ＲＥＴＵＲＮ］
　指定したページに、指定したセグメントを設定します。指定可能なセグメントは、２５５以下です。全ての操作はマッパーサポートルーチンを介して行われるので、マッパーサポートルーチンがないと実行できません。システムの都合上、切り替えられるのはページ２のみです。コマンド名だけの入力で、マッパーを初期化します。


  −  スーパーディスアセンブラ／データ作成  −
＞ＳＤ［開始アドレス］〈＃スロット指定〉，［終了アドレス］，［ファイル名］〈，データ作成スイッチ〉 ［ＲＥＴＵＲＮ］
　通常は、いわゆる２パスのディスアセンブラです。領域をディスアセンブルし、ラベルになり得る所はラベルに変換後（Ｘ［アドレス］という形）、ソースリストとしてディスクに出力します。
　データ作成スイッチが付加されると、指定範囲をデータとしてファイルに出力します。
　スイッチは以下の２つがあります。
［Ｂ］……ＤＥＦＢ形式のデータ。アセンブラのソースに組み込みたい時に有用です
［Ｄ］……ＢＡＳＩＣのＤＡＴＡ形式のデータ。行番号は１００００から始まり、データは１６進数文字列をつなげた形です。展開は、
ＲＥＡＤ　Ａ＄
ＦＯＲ　Ｉ＝０　ＴＯ　３１
ＰＯＫＥ　ＡＤ＋Ｉ，ＶＡＬ（”＆Ｈ”＋ＭＩＤ＄（Ａ＄，Ｉ＊２＋１，２））
ＮＥＸＴ　Ｉ
　というようなお馴染の形でできます。


  −  ファイル一覧  −
＞ＦＳ〈ドライブ名〉 ［ＲＥＴＵＲＮ］
　ファイルの一覧を表示します。


  −  ディスクの使用状況表示  −
＞ＣＩ〈ドライブ名〉 ［ＲＥＴＵＲＮ］
　ディスクの使用状況を、「［使用クラスタ数］／［全クラスタ数］」の形で表示します。


  −  ＣＰＵのチェンジ  −
＞ＣＵ〈番号〉 ［ＲＥＴＵＲＮ］
　ＣＰＵをチェンジします。もちろんｔｕｒｂｏＲ専用です。
番号：０＝Ｚ８０
　　　１＝Ｒ８００（ＲＯＭ）
　　　２＝Ｒ８００（ＤＲＡＭ）


  −  画面の色を変える  −
＞ＣＯ［前景色］，［背景色］，［周辺色］ ［ＲＥＴＵＲＮ］
　画面の色を変えます。パラメータは３つとも指定してください。


  −  メモリ中の漢字を読む  −
＞ＫＲ［開始アドレス］〈＃スロット指定〉 ［ＲＥＴＵＲＮ］
　メモリの中の漢字文字列を読みたい時に使用します。一画面表示する毎に停止します。終了したい時は［ＥＳＣ］です。漢字表示するコマンド全ていえる事ですが、ＶＲＡＭスロット上に漢字フォントがないと漢字は表示されず、また、コマンドを実行するとＶＲＡＭノートはクリアされます。


  −  漢字タイプ  −
＞ＫＴ［ファイル名］ ［ＲＥＴＵＲＮ］
　漢字で書かれたテキストファイルなどを読みます。


  −  漢字フォント読み込み  −
＞ＫＬ〈ドライブ名〉 ［ＲＥＴＵＲＮ］
　漢字フォントファイル″ＳＵＰＥＲ−Ｘ．ＦＮＴ″をＶＲＡＭスロットに読み込みます。漢字フォントは、通常セッティング時に読みこまれますが、ＶＲＡＭスロットを他の用件で使用してフォントをくずしてしまった後に漢字を表示したい時等に使用します。


  −  セーブ（ＢＳＡＶＥ）  −
＞ＳＶ［ファイル名］，［先頭アドレス］，［終了アドレス］〈，実行アドレス〉 ［ＲＥＴＵＲＮ］
　ＢＡＳＩＣのＢＳＡＶＥと全く同じで、スロット指定非対応です。アドレスの範囲も、８０００Ｈ〜ＦＦＦＦＨのみです。


  −  ロード（ＢＬＯＡＤ）  −
＞ＬＤ［ファイル名］ ［ＲＥＴＵＲＮ］
　ＢＡＳＩＣのＢＬＯＡＤと同様です。


  −  スーパーセーブ  −
＞Ｓ＃［ファイル名］，［先頭アドレス］〈＃スロット指定〉，［終了アドレス］ ［ＲＥＴＵＲＮ］
　指定されたメモリの内容を、そのままファイルにセーブします。スロット指定にも対応しています。


  −  スーパーロード  −
＞Ｌ＃［ファイル名］，［読み込み開始アドレス］〈＃スロット指定〉 ［ＲＥＴＵＲＮ］
　指定されたファイルを、指定したアドレスにまるごとロードします。スロット指定にも対応しています。


  −  セクタセーブ  −
＞Ｓ％〈ドライブ名：〉［開始セクタ（数値）］，〈終了セクタ〉，［開始アドレス］〈＃スロット指定〉 ［ＲＥＴＵＲＮ］
　開始アドレスからのメモリ内容を、指定されたセクタに書き込みます。スロット指定にも対応しています。終了セクタを省略した時は、１セクタのみに書き込みます。


  −  セクタロード  −
＞Ｌ％〈ドライブ名：〉［開始セクタ］，〈終了セクタ〉，［開始アドレス］〈＃スロット指定〉 ［ＲＥＴＵＲＮ］
　指定したセクタの内容を開始アドレスに読み込みます。スロット指定にも対応しています。
　終了セクタを省略した時は、１セクタだけを読み込みます。


  −  インデックス作成  −
＞ｉＭ［アドレス］，［スロットデータ］，［種類データ］ ［ＲＥＴＵＲＮ］
　インデックスタンクに新しいインデックスを登録します。ウインドーに、［カーソルキー］と文字キーで好きな説明を書き、［ＲＥＴＵＲＮ］を押すと登録されます。途中で登録をやめる場合は［ＥＳＣ］です。
　スロットデータと種類データは、共にインデックスの補足説明をします。
スロットデータ
　０：ヌル
　１：ＭＡＩＮ
　２：ＳＵＢ
  ３：ＦＤＣ
　４：ＲＡＭ
種類データ
　０：ヌル
　１：ＢＩＯＳ
　２：ＷＯＲＫ
　３：ＤＡＴＡ
　４：ＰＯＲＴ
　５：ＭＡＴＨ
　６：ＫＥＹ
　７：ＨＯＯＫ


  −  インデックスの確認  −
＞ｉＣ［アドレス］ ［ＲＥＴＵＲＮ］
　インデックスタンクに、指定したアドレスのインデックスがあるかチェックします。


  −  インデックスタンクロード  −
＞ｉＬ〈ドライブ名〉 ［ＲＥＴＵＲＮ］
　インデックスタンクファイルをロードします。


  −  インデックスファイルタンクセーブ  −
＞ｉＳ〈ドライブ名〉 ［ＲＥＴＵＲＮ］
　インデックスタンクファイルをセーブします。ｉＭコマンドで新しいインデックスを作ったら、このコマンドでファイルにセーブしておきましょう。


  −  アドレス変数操作  −
＞ＶＲ〈変数番号，［アドレス］〈＃スロット指定〉〉 ［ＲＥＴＵＲＮ］
　アドレス変数の値を設定します。変数番号は０〜３までで、コマンド名のみを入力した場合は各アドレス変数の値を表示します。


  −  Ｉ／Ｏポートイン  −
＞ＰＩ［ポート番号］ ［ＲＥＴＵＲＮ］
　指定したＩ／Ｏポートから、値を読み取り表示します。


  −  Ｉ／Ｏポートアウト  −
＞ＰＯ［ポート番号］，［数値］ ［ＲＥＴＵＲＮ］
　指定したＩ／Ｏポートに、数値を書き込みます。


  −  終了  −
＞ＱＴ ［ＲＥＴＵＲＮ］
　ＳＵＰＥＲ−ＸからＢＡＳＩＣに戻ります。


【　注意事項　】

　−　ページ３について　−
　ＭＳＸはシステムが一度起動すると、ＢＩＯＳのページ切り替えルーチンがページ３にある為、ページ３をシステムＲＡＭスロットから切り替えることはできません。それで普通ページ３でシステムＲＡＭスロット以外を指定すると暴走するのですが、ＳＵＰＥＲ−Ｘではそんな場合、そこにはなにも接続されていないものとして処理しています（読み込むとＦＦＨ、書き込みはしない）。

　−　ＦＤＣ−ＲＯＭ解析上の注意　−
　機種によって違いますが、ＦＤＣ−ＲＯＭを解析する時は、ページ１の最後の方を読みこんではいけません。ＲＯＭにプロテクトがかかっているため、ディスクドライブが暴走します。
